"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.axiosGet = axiosGet;
const axios_1 = __importDefault(require("axios"));
const https_proxy_agent_1 = require("https-proxy-agent");
/**
 * This function is called to better handle axios.get calls with logic that allows
 * the use of proxies. Not needed in tests unless specifically testing with proxies.
 * Check https://github.com/axios/axios/issues/3459#issuecomment-766171276 for more info.
 * @param url {string} - string representation of url to get
 * @param responseType {any} - optional parameter to change the data type needed from get
 * (ex. arraybuffer). In default it returns JSON
 */
async function axiosGet(url, options) {
    const httpsProxy = process.env.HTTPS_PROXY;
    const axiosOptions = options !== null && options !== void 0 ? options : {};
    if (httpsProxy) {
        // https://github.com/axios/axios/issues/3459
        axiosOptions.httpsAgent = new https_proxy_agent_1.HttpsProxyAgent(httpsProxy);
        axiosOptions.proxy = false;
    }
    if (Object.keys(axiosOptions).length > 0) {
        return await axios_1.default.get(url, axiosOptions);
    }
    else {
        return await axios_1.default.get(url);
    }
}
//# sourceMappingURL=axiosUtils.js.map