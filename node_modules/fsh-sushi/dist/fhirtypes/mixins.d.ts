import { FshValueSet, FshStructure, FshCodeSystem, Instance } from '../fshtypes';
import { FHIRId } from './primitiveTypes';
export declare class HasName {
    name?: string;
    /**
     * Set the name and check if it matches the regular expression specified
     * in the invariant for "name" properties. A name must be between 1 and 255 characters long,
     * begin with an uppercase letter, and contain only uppercase letter, lowercase letter,
     * numeral, and '_' characters.
     * If the string does not match, log an error.
     *
     * @see {@link http://hl7.org/fhir/R4/structuredefinition-definitions.html#StructureDefinition.name}
     * @see {@link http://hl7.org/fhir/R4/valueset-definitions.html#ValueSet.name}
     * @see {@link http://hl7.org/fhir/R4/codesystem-definitions.html#CodeSystem.name}
     * @param {FshStructure | FshCodeSystem | FshValueSet} fshDefinition - The entity who's name is being set
     */
    setName(fshDefinition: FshStructure | FshCodeSystem | FshValueSet): void;
}
export declare class HasId {
    id?: FHIRId;
    /**
     * Set the id and check if it matches the regular expression specified
     * in the definition of the "id" type.
     * If the FHIRId does not match, log an error.
     *
     * @param {FshStructure | FshCodeSystem | FshValueSet} fshDefinition - The entity who's id is being set
     */
    setId(fshDefinition: FshStructure | FshCodeSystem | FshValueSet): void;
    /**
     * Check if the current id matches the regular expression specified
     * in the definition of the "id" type.
     * If the FHIRId does not match, log an error.
     * If the id is a valid name, sanitize it to a valid id and log a warning
     *
     * @param {FshStructure | FshCodeSystem | FshValueSet} fshDefinition - The entity who's id is being set
     */
    validateId(fshDefinition: FshStructure | FshCodeSystem | FshValueSet | Instance): void;
}
