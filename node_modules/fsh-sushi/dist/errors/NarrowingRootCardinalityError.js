"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NarrowingRootCardinalityError = void 0;
class NarrowingRootCardinalityError extends Error {
    constructor(rootElement, existingSlice, newMin, newMax, sliceMin, sliceMax) {
        super(`Cardinality on ${rootElement} cannot be narrowed to ${newMin}..${newMax} due to existing slice ${existingSlice} with cardinality ${sliceMin}..${sliceMax}.`);
        this.rootElement = rootElement;
        this.existingSlice = existingSlice;
        this.newMin = newMin;
        this.newMax = newMax;
        this.sliceMin = sliceMin;
        this.sliceMax = sliceMax;
        this.specReferences = ['http://hl7.org/fhir/R4/profiling.html#cardinality'];
    }
}
exports.NarrowingRootCardinalityError = NarrowingRootCardinalityError;
//# sourceMappingURL=NarrowingRootCardinalityError.js.map