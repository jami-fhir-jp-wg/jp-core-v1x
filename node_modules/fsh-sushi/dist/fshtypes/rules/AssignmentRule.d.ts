import { Rule } from './Rule';
import { FshCode } from '../FshCode';
import { FshQuantity } from '../FshQuantity';
import { FshRatio } from '../FshRatio';
import { FshReference } from '../FshReference';
import { InstanceDefinition } from '../../fhirtypes/InstanceDefinition';
import { FshCanonical } from '../FshCanonical';
export type AssignmentValueType = boolean | number | bigint | string | FshCanonical | FshCode | FshQuantity | FshRatio | FshReference | InstanceDefinition;
export declare class AssignmentRule extends Rule {
    value: AssignmentValueType;
    rawValue?: string;
    exactly: boolean;
    isInstance: boolean;
    constructor(path: string);
    get constructorName(): string;
    toFSH(): string;
}
