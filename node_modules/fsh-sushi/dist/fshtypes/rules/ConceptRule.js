"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConceptRule = void 0;
const Rule_1 = require("./Rule");
const common_1 = require("../common");
class ConceptRule extends Rule_1.Rule {
    constructor(code, display, definition) {
        super('');
        this.code = code;
        this.display = display;
        this.definition = definition;
        this.hierarchy = [];
    }
    get constructorName() {
        return 'ConceptRule';
    }
    toFSH() {
        // quote codes that contain spaces or start with a double quote
        const quotedCodes = [...this.hierarchy, this.code].map(code => /^"|\s/.test(code) ? `#"${(0, common_1.fshifyString)(code)}"` : `#${code}`);
        let line = `* ${quotedCodes.join(' ')}`;
        if (this.display) {
            line += ` "${(0, common_1.fshifyString)(this.display)}"`;
        }
        if (this.definition) {
            // If there is no display, a definition must be specified with triple quotes
            // so that it is correctly differentiated from a display by sushi
            const quotes = this.display ? '"' : '"""';
            line += ` ${quotes}${(0, common_1.fshifyString)(this.definition)}${quotes}`;
        }
        return line;
    }
}
exports.ConceptRule = ConceptRule;
//# sourceMappingURL=ConceptRule.js.map