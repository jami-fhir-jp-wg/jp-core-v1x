import { FshEntity } from './FshEntity';
import { FshCode } from './FshCode';
import { AssignmentRule, InsertRule } from './rules';
/**
 * The Invariant class is used to represent the "constraint" field on ElementDefinition
 * Invariant fields map to their corresponding field on "constraint" except:
 * description -> constraint.human
 * name -> constraint.key
 * @see {@link https://www.hl7.org/fhir/elementdefinition.html}
 */
export declare class Invariant extends FshEntity {
    name: string;
    description?: string;
    expression?: string;
    xpath?: string;
    severity?: FshCode;
    rules: (AssignmentRule | InsertRule)[];
    constructor(name: string);
    get constructorName(): string;
    /**
     * Read only property for id that just returns the name of the invariant
     * This was added so that all types that are returned by FSHTank.fish have an id that can be accessed
     */
    get id(): string;
    metadataToFSH(): string;
    toFSH(): string;
}
