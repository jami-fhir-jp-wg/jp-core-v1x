import { FHIRDefinitions } from './FHIRDefinitions';
import { ImplementationGuideDefinitionParameter } from '../fhirtypes';
/**
 * Loads custom resources defined in resourceDir into FHIRDefs
 * @param {string} resourceDir - The path to the directory containing the resource subdirs
 * @param {string} projectDir - User's specified project directory
 * @param {ImplementationGuideDefinitionParameter[]} configParameters - optional, an array of config parameters in which to
 *    determine if there are additional resource paths for predefined resource
 * @param {FHIRDefinitions} defs - The FHIRDefinitions object to load definitions into
 */
export declare function loadCustomResources(resourceDir: string, projectDir: string, configParameters: ImplementationGuideDefinitionParameter[], defs: FHIRDefinitions): void;
/**
 * Loads a "supplemental" FHIR package other than the primary FHIR version being used. This is
 * needed to support extensions for converting between versions (e.g., "implied" extensions).
 * The definitions from the supplemental FHIR package are not loaded into the main set of
 * definitions, but rather, are loaded into their own private FHIRDefinitions instance accessible
 * within the primary FHIRDefinitions instance passed into this function.
 * @param fhirPackage - the FHIR package to load in the format {packageId}#{version}
 * @param defs - the FHIRDefinitions object to load the supplemental FHIR defs into
 * @returns Promise<void> promise that always resolves successfully (even if there is an error)
 */
export declare function loadSupplementalFHIRPackage(fhirPackage: string, defs: FHIRDefinitions): Promise<void>;
