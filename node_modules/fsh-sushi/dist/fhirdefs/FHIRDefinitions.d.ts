import { FHIRDefinitions as BaseFHIRDefinitions } from 'fhir-package-loader';
import { Type, Metadata, Fishable } from '../utils';
export declare class FHIRDefinitions extends BaseFHIRDefinitions implements Fishable {
    readonly isSupplementalFHIRDefinitions: boolean;
    private predefinedResources;
    private supplementalFHIRDefinitions;
    constructor(isSupplementalFHIRDefinitions?: boolean);
    allPackageJsons(): any[];
    get supplementalFHIRPackages(): string[];
    allPredefinedResources(makeClone?: boolean): any[];
    add(definition: any): void;
    addPredefinedResource(file: string, definition: any): void;
    getPredefinedResource(file: string): any;
    resetPredefinedResources(): void;
    addSupplementalFHIRDefinitions(fhirPackage: string, definitions: FHIRDefinitions): void;
    getSupplementalFHIRDefinitions(fhirPackage: string): FHIRDefinitions;
    fishForPredefinedResource(item: string, ...types: Type[]): any | undefined;
    fishForPredefinedResourceMetadata(item: string, ...types: Type[]): Metadata | undefined;
    fishForFHIR(item: string, ...types: Type[]): any | undefined;
    fishForMetadata(item: string, ...types: Type[]): Metadata | undefined;
}
