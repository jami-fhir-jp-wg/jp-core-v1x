import { StructureDefinition, InstanceDefinition, ValueSet, CodeSystem } from '../fhirtypes';
import { Configuration, SourceInfo } from '../fshtypes';
import { Fishable, Type, Metadata } from '../utils/Fishable';
export declare class Package implements Fishable {
    readonly config: Configuration;
    readonly profiles: StructureDefinition[];
    readonly extensions: StructureDefinition[];
    readonly logicals: StructureDefinition[];
    readonly resources: StructureDefinition[];
    readonly instances: InstanceDefinition[];
    readonly valueSets: ValueSet[];
    readonly codeSystems: CodeSystem[];
    readonly fshMap: Map<string, SourceInfo & {
        fshName: string;
        fshType: string;
    }>;
    constructor(config: Configuration);
    fish(item: string, ...types: Type[]): StructureDefinition | ValueSet | CodeSystem | InstanceDefinition | undefined;
    fishForFHIR(item: string, ...types: Type[]): any | undefined;
    fishForMetadata(item: string, ...types: Type[]): Metadata | undefined;
    clearAllDefinitions(): void;
}
