"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fpl = exports.getLatestVersion = void 0;
const utils_1 = require("./utils");
const load_1 = require("./load");
var load_2 = require("./load");
Object.defineProperty(exports, "getLatestVersion", { enumerable: true, get: function () { return load_2.lookUpLatestVersion; } });
function fpl(fhirPackages, options = {}) {
    return __awaiter(this, void 0, void 0, function* () {
        // Track errors and warnings
        const errorsAndWarnings = new utils_1.ErrorsAndWarnings();
        const logWithTrack = (0, utils_1.wrapLogger)(options.log, errorsAndWarnings);
        // Create list of packages
        if (!Array.isArray(fhirPackages)) {
            fhirPackages = fhirPackages.split(',').map(p => p.trim());
        }
        fhirPackages = fhirPackages.map(dep => dep.replace('@', '#'));
        const defs = yield (0, load_1.loadDependencies)(fhirPackages, options.cachePath, logWithTrack);
        const failedPackages = defs.allUnsuccessfulPackageLoads();
        return {
            defs,
            errors: errorsAndWarnings.errors,
            warnings: errorsAndWarnings.warnings,
            failedPackages
        };
    });
}
exports.fpl = fpl;
//# sourceMappingURL=api.js.map