name: JPCore FHIR Task

on:
  push:
    branches: 
      - 'main'
      - 'develop'
      - 'release/**'
      - 'hotfix/**'
    paths:
      - 'sushi-config.yaml'
      - 'input/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - 'main'
      - 'develop'
jobs:
  turn:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.0']
    steps:
    - uses: actions/checkout@v2

    - name: Extract branch name
      run: |
        if ["${{ github.event.pull_request.head.ref }}" == ""]; then
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "##[set-output name=branch_group;]$(echo ${GITHUB_REF#refs/heads/})"
        else
          echo "##[set-output name=branch;]$(echo ${{ github.event.pull_request.head.ref }})"
          echo "##[set-output name=branch_group;]$(echo 'pullrequest')"
        fi
      id: extract_branch
    
    - name: Extract last commit date
      shell: bash
      run: |
        echo "##[set-output name=date;]$(git log -1 --format="%at" | xargs -I{} date -d @{})"   
      id: extract_date

    - uses: bluwy/substitute-string-action@v1
      id: substitute_index
      with:
        _input-file: input/landing_page/_index.yml
        _format-key: '%%key%%'
        group: ${{ steps.extract_branch.outputs.branch_group }}
        branch: ${{ steps.extract_branch.outputs.branch }}
        date: ${{ steps.extract_date.outputs.date }}
        actor: ${{ github.actor }}
        pullrequest_url: ${{ github.event.pull_request.html_url }}
        _output-file: input/landing_page/_index.yml

    - name: Setup npm
      uses: actions/setup-node@v2
      with: 
        check-latest: true

    - name: Setup Sushi
      run: |
        sudo npm install -g fsh-sushi

    - name: Install Jekyll
      run: |
        sudo apt-get install jekyll
        
    - name: Download IG Publisher
      uses: Legion2/download-release-action@v2.1.0
      with:
        repository: HL7/fhir-ig-publisher
        tag: 'latest'
        path: .
        file: publisher.jar
   
    - name: Run IG Publisher
      run: | 
        mkdir input-cache
        mv publisher.jar ./input-cache/publisher.jar
        unset DISPLAY
        java -Djava.awt.headless=true -jar ./input-cache/publisher.jar -ig ig.ini
        mv ./input/landing_page/_index.yml ./output/

    - name: Deploy Implementation Guide
      if: success()
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.PERSONAL_TOKEN }}
        external_repository: jami-fhir-jp-wg/jp-core-v1xpages
        publish_branch: pages
        publish_dir: ./output
        destination_dir: ./jpcore-r4/${{ steps.extract_branch.outputs.branch }}
